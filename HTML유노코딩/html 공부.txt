유노코딩 강의 #4
<!DOCTYPE html> 은 
문서의 첫 부분에서 문서 유형을 지정하는 단일 태그
문서 유형이란 웹 브라우저에게 ' 이 문서는 00이니까 잘 처리해줘' 라는 메시지 전달

HTML은 첫 등장 후 시간이 흐르면서 버전 변경을 해왔는데, 현재 표준으로 사용되고 있는 
HTML 버전을 사용하기 위해 적어주는 타입이 바로 'html' 이다.

득별한 경우가 아니라면 이전에 사용하던 html 버전에 대해서는 몰라도 OK

<html></html>
문서 유형을 지정한 후 실제 문서가 시작되고 끝나는 것을 나타내는 태그이다.
<html>에서부터 HTML 문서가 시작되고 </html> 에서 HTML문서가 끝난다.
이 태그의 내부에 다양한 태그들이 포함되어 문서의 내용을 구성한다.

<head></head>
웹 브라우저 화면에는 보이지 않지만 웹 브라우저가 알아야 할 정보들은 모두 이 태그에 들어감
<meta charset = "utf-8">
=> 문자 인코딩 및 문서 키워드 등에 대한 요약 정보를 기입하는 단일 태그이다.
문자 인코딩이란 한글을 표시하기 위해 문자 세트를 지정하는 작업으로, 
영문과 한글을 모두 사용하기 위해 utf-8 방식을 사용하는 것이 좋다. 

<title></title>
문서의 제목을 나타냄. 콘텐츠는 브라우저 탭에 표시된다.

<body></body>
실제 브라우저 화면에 표시될 내용을 입력하는 태그
여기에는 다음과 같은 유형의 태그들이 포함될 수 있음
- 텍스트를 표시하는 태그
- 이미지를 표시하는 태그
- 각종 사용자 인터페이스(버튼,입력란,드롭다운 메뉴 등)을 나타내는 태그

=> 기본 문서 구조를 통해 확인했듯,태그 안에 태그를 포함하는 방식으로 콘텐츠를 다양하게 구성할 수 있다.


HTML 코르를 작성할 때는 기본 문서 구조를 마련한 다음 작성
들여쓰기를 통한 태그 간의 포함 관계를 나타낸다. 이는 가독성에 도움이 된다. 필수 사항은 아님
head 태그에는 문서의 정보가 body 태그는 표시할 내용이 포함된다
태그의 콘텐츠로 또 다른 태그가 포함될 수 있다.

p태그는 문단 요소를 나타내는 태그, 가장 많이 사용되는 텍스트 태그
하나의 p태그는 하나의 문단을 표현. 문단과 문단 사이에는 공백이 있다.


유노코딩 #5
문단(paragraph)
<p>안녕하세요! 이것은 문단을 표시하는 태그입니다.</p>
<p>문단과 문단 사이에는 공백이 있습니다. 이 문단의 위쪽을 보시면 확인 가능.</p>

=>안녕하세요! 이것은 문단을 표시하는 태그입니다.
  
  문단과 문단 사이에는 공백이 있습니다. 이 문단의 위쪽을 보시면 확인 가능.

제목(headline)
h 태그는 제목(표제) 요소를 나타내는 태그.
숫자와 함께 사용되며, 숫자 1일 때 가장 크고 6일 때 가장 작다.
<h1>제목을 나타내자!</h1>   폰트가 점점점 작아짐 예로 20 -> 16 -> 12 -> 8 -> 4 이런순으로
<h2>제목을 나타내자!</h2>
<h3>제목을 나타내자!</h3>
<h4>제목을 나타내자!</h4>
<h5>제목을 나타내자!</h5>
<h6>제목을 나타내자!</h6>

수평선
hr 태그는 수평선을 표시하는 태그. 수평선은 주제 변경 또는 내용 구분을 위해 주로 사용된다.
<p>지금까지 스포츠 뉴스였습니다.</p>
<hr><!--주제 변경을 나타냄 / 단일 태그-->
<p>날씨입니다. 따뜻하지만 미세먼지가 가득할 예정입니다.</p>

=>지금까지 스포츠 뉴스였습니다.
--------------------------------------------------------점선이지만 일자선임
  날씨입니다. 따뜻하지만 미세먼지가 가득할 예정입니다.


HTML 텍스트의 특징
일반적으로 엔터는 '줄바꿈'을 의미하는 입력이지만, HTML 코드에서는 이를 무시한다. 
또한 스페이스를 통한 공백도 한번씩 밖에 인정되지 않음.

줄바꿈 태그와 공백문자
HTML에서는 br태그가 '줄바꿈'을 담당
공백을 두 번 이상 표시하고자 할 때는 &nbsp;를 사용한다.
<p>공&nbsp;&nbsp;&nbsp;&nbsp;백
   <br/>그리고<br/>줄<br/>바<br/>꿈
</p>
=>공    백
  그리고
  줄
  바
  꿈

내용정리
p태그는 문단을 표시하는 태그
h1~h6태그는 헤드라인을 표시하는 태그,숫자가 작을수록 큼
수평선 hr은 주제 변경이나 내용 구분 시에 사용하는 태그
HTML은 텍스트의 줄바꿈,공백 등을 엔터와 스페이스로 처리하지 않는다.
스페이스는 한 번씩만 허용된다(연달아 입력할 경우 한 번 외엔 무시)
태그 br는 줄바꿈을, 문자조합 &nbsp는 공백을 나타냄.


유노코딩 #6
태그의 구분
블록 레벨 요소를 만드는 태그 vs 인라인 요소를 만드는 태그

블록태그 : 자기가 속한 영역의 너비를 모두 차지하여 블록을 형성
인라인태그 : 자기에게 필요한 만큼의 공간만 차지

텍스트를 굵게 만들자
strong 태그는 감싸고 있는 콘텐츠를 굵게 표시하는 태그이다. 인라인 요소를 만드는 태그이다

텍스트를 이탤릭체로 쓰자
em 태그는 감싸고 있는 콘텐츠를 기울여 이탤릭체로 표시하는 태그이다. 인라인 요소를 만드는 태그.

텍스트에 형광펜 표시를 하자
mark 태그는 감싸고 있는 콘텐츠에 형광펜 표시를 더해주는 태그이다. 인라인 요소를 만드는 태그.

추가 정보 : 인라인 태그와 블록 태그를 구분하는 이유는
블록 태그 안에 다른 블록 태그를 넣는 것 → 가능
블록 태그 안에 인라인 태그를 넣는 것 → 가능
인라인 태그 안에 인라인 태그를 넣는 것 → 가능
인라인 태그 안에 블록 태그를 넣는 것 → 불가능 
이러한 이유들도 있기 때문이다.

위에 있는 것들을 실험해보자

내용정리
HTML문서의 요소는 블록 레벨 요소와 인라인 요소로 구분할 수 있다.
블록 레벨 요소는 너비(공간)를 모두 차지하여 블록을 형성한다.
인라인 요소는 콘텐츠를 표시하기 위해 필요한 공간만 차지한다.


유노코딩#7
이미지를 보여주는 img 태그
img 태그는 이미지를 표시할 때 사용하는 태그이다.
단일 태그로써, 닫는 태그를 필요로 하지 않는다.
콘텐츠를 적어주는 대신 표시할 이미지에 대한 정보를 속성으로 지정해주어야 한다
기본형태)
<img src = "표시할 이미지 파일" alt = "이미지설명" />

표시할 이미지 지정
img 태그의 scr(sorce) 속성은 표시할 이미지의 위치정보와 파일명을 입력받는 속성이다. 즉, 이미지의 url을 입력받는다.
서버에 위치한 이미지 파일이어도 되고, 내 컴퓨터에 저장된 이미지 파일이어도 된다.

=> url이란 이미지가 어디에 있는지 알려주기 위해 사용하는 규약(형식)이다.

이미지 설명(alt)의 중요성
alt는 alternative의 약자로 대체 텍스트 역할을 한다.
이미지가 로딩되기 전이나 이미지 로딩에 실패한 경우 이미지 대신에 대체 텍스트가 표시된다.
alt를 사용하면 이미지를 볼 수 없는 시각장애인에게 웹페이지를 서비스해야 하는 상황에 대한 대비가 가능
EX) 음성인식기가 이미지 대신 이를 활용.
alt로 작성을 할 때에는 상세한 설명이 필요함

이미지 크기 조절하기
img 태그를 통해 이미지를 표시할 때는 이미지가 표시될 크기를 지정할 수 있다.
이때 너비와 높이를 각각 지정할 수 있다. 단위 없이 정수 값만 지정한다
<img scr = "너비값" height = "높이값"/>
=> 너비와 높이값은 각각 픽셀(px) 단위로 적용된다.
만약 너비와 높이값을 지정하지 않을 시 원본 파일의 값으로 적용
너비나 높이값을 각각 지정할 수 있는 만큼 하나만 지정할 수도 있음.

내용정리
이미지를 표시할 때는 닫는 태그가 없어도 되는 img 태그를 사용
scr 속성은 이미지의 url을 입력받는 속성이다.
alt 속성은 대체 텍스트를 입력받는다. 이미지 유실 상황에 대응할 수 있다.
width와 heingt는 각각 이미지의 너비와 높이를 입력받는 속성이다.


유노코딩#8
컨테이너 태그
콘텐츠나 레이아웃에 아무런 영향도 주지 않고, 
단지 다른 요소 여럿을 묶어 관리하기 편하게 만드는 역할을 하는 태그
콘텐츠 내용을 구분하거나, 공통적인 스타일을 적용하고자 할 때 개발자는 컨테이너를 사용하는 것이 좋다.
다음 두 가지 태그가 컨테이너 역할을 담당하는 태그들.
- <div></div> : 블록 레벨 컨테이너
- <span></span> : 인라인 컨테이너

전역 속성
전역 속성은 모든 HTML 태그에서 공통으로 사용할 수 있는 속성이다.
속성이란 태그의 부가적인 기능을 정의하는 것으로, 선택사항이다.
속성은 시작 태그의 내부에 정의한다. 속성의 개수에는 특별한 제한이 없다.

속성을 추가하는 방법)
<태그명 속성명 = "속성값" 속성명 = "속성값"> 콘텐츠 </태그명>

대표적인 전역 속성들 
- id : 요소에 고유한 이름을 부여하는 식별자 역할 속성
- class : 요소를 그룹 별로 묶을 수 있는 식별자 역할 속성
- style : 요소에 적용할 CSS 스타일을 선언하는 속성
- title : 요소의 추가 정보를 제공하는 텍스트 속성. 사용자에게 툴팁 제공.

내용 정리
콘텐츠나 레이아웃에 영향을 주지 않는 태그 요소를 컨테이너라 한다.
컨테이너는 영역을 묶어서 관리하고자 할 때 사용한다.
모든 태그에 공통적으로 지정 가능한 속성을 전역 속성이라 한다.
id와 class는 태그명이 같은 요소들을 식별하기 위해 사용하는 속성들이다.
id는 태그당 하나씩만 지정해야 하나, class는 다중 지정 및 중복 가능하다.
특정 태그에만 지정 가능한 속성들도 물론 존재한다.


유노코딩#9
링크는 anchor (앵커)
a 태그 요소는 href 속성을 통해 다른 페이지, 전화번호, 이메일 주소와 그 외 
다른 url로 연결할 수 있는 링크(연결)를 만든다.
인라인 요소이며, 콘텐츠는 주로 링크의 목적지를 나타낸다.

<a href = "링크">
기사 양반, 네이버로 갑시다
</a>

=> 기사 양반, 네이버로 갑시다  /라는 하이퍼 링크생성

새 탭에서 열고 싶다
a 태그의 target 속성을 이용하면 새로운 문서를 열 때 현재 탭에서 열지,
새로운 탭에서 열지 결정할 수 있다.

<a href = "링크" target = "_self">
현재 탭에서 열기(기본값)
</a>

<a  href = "링크" target = "_blank">
새 탭에서 열기
</a>

연락을 해보자
a 태그의 href에는 웹문서의 주소 뿐 아니라 전화번호나 메일 주소 등을 지정할 수도 있다.
이 때 각 유형별로 추가되는 텍스트가 있다.

<a href = "tel : 010-4754-7393" target = "_self">
전화걸기
</a>

<a href = "mailto : kangh2580@naver.com" targer = "_blank">
메일쓰기
</a>

내용 정리 
a 태그는 페이지를 다른 위치로 이동시킬 수 있는 링크를 만든다.
href 속성에는 링크가 참조하는(이동하고자 하는) url을 입력한다.
targer 속성에는 새 페이지가 열릴 대상(탭)을 지정할 수 있다. _blank
href 속성을 통해 전화걸기, 이메일 보내기 등을 지정할 수도 있다.


유노코딩#10
목록
목록은 연관 있는 항목(item)들을 나열한 것을 의미한다.
HTML 목록은 '순서 없는 목록' 과 '순서 있는 목록'으로 구분된다.

토끼                                 1.HTML
다람쥐                               2.CSS
청설모                               3.JavaSript
호랑이 
Unordered List(순서가 없는 목록)      Ordered List(순서가 있는 목록)
항목에 사용하는 기호에 따라 갈라짐

목록 태그의 구분
순서 없는 목록 : <ul></ul>
순서 있는 목록 : <ol></ol>

항목 태그는 같은 것을 쓴다(항목 : list item)
<li> 태그는 목록에 들어가는 항목 하나 하나를 표현할 때 사용하는 태그이다.
항목들(<li> 태그들)을 감싸는 태그가 무엇이냐에 따라 기호가 달라진다.

<ul>
 <li>토끼</li>         토끼
 <li>다람쥐</li>   =>  다람쥐
 <li>청설모</li>       청설모
 <li>호랑이</li>       호랑이
</ul>

<ol>
 <li>HTML</li>        => 1.HTML
 <li>CSS</li>            2.CSS
 <li>JavaScript</li>     3.JavaScript
</ol>

=> <ul>,<ol>,<li> 는 모두 블록 레벨 요소를 만드는 태그이다!

<ul>,<ol> 태그를 쓸 때 개발자도구로 보면 순서를 나타내는 곳 전에 들여쓰기로 되어있는데
그것은 목록 태그인 ul, ol 태그의 기본 스타일임. 목록을 나타낼 때에는 목록이다라는 표현인 
여백이 추가됨.

내용 정리
목록은 연관 있는 항목들을 나열한 것이다.
목록 요소는 '순서 없는 목록'과 '순서 있는 목록' 으로 구분할 수 있다.
목록 안에 들어가는 항목 요소를 표시할 때는 li태그를 사용한다.
ol, ul, li 태그는 모두 블록 레벨 요소를 표시하는 태그이다.


유노코딩#11
input
사용자로부터 값을 입력 받을 수 있는 대화형 컨트롤(또는 '필드')를 나타낸다.
기본적으로 인라인 요소이며, 단일 태그이다

<imput />   => 공란이 생김(뭔갈 쓸 수 있음)

input의 핵심, type 속성
type의 값에 따라 입력 요소의 형태나 데이터 유형 등이 달라진다.
사용 가능한 type은 20여 가지이며, 기본값은 text이다.
type의 값이 달라짐에 따라 적용할 수 있는 추가 속성의 종류도 조금씩 차이를 보임

이름을 지어주세요
input 태그에는 name 식별자를 추가할 수 있다.
이는 각각의 입력 항목에 대한 이름이다.
<input type ="text" name ="nichname" />
<input type ="text" name ="job" />

내용정리
input 태그는 입력 요소를 만드는 태그이다.
input 태그는 type 속성을 통해 형태와 입력 값 유형을 결정한다
type 값에 따른 사용 방법이 다양하다.
(웹페이지 내에서의 역할, 추가 속성 등)
name 속성으로 input 요소를 구별할 수 있다.

유노코딩#12
보기 중에 골라보자
select는 다수의 옵션(선택지)를 포함할 수 있는 선택 메뉴이다.
메뉴 안에 포함되는 옵션은 option태그를 사용해 표시한다.

이름과 값
select에는 input과 마찬가지로 name을 지정할 수 있으며, 
각각의 option에는 value 속성을 지정할 수 있다.
value는 실제로 처리될 값을 나타낸다.
- value 속성을 사용해 코드를 작성하는 이유는 
1.한글의 인코딩 문제 발생 우려
2.시스템 간 데이터 교환이 필요할 때 표준화 된 값이 필요
3.데이터베이스나 시스템에서는 영문 코드값이 필요할 수 있음.

textarea
textarea는 여러 줄의 일반 텍스트를 입력할 수 있는 입력 요소이다.
textarea 역시 name을 추가하여 구별해줄 수 있는 입력 요소이다.
<textarea name="lette"></textarea>
=> input으로는 한 줄만 쓸 수 있지만 textarea는 여러 줄을 쓸 수 있음

내용정리
select는 선택 메뉴를 나타내는 태그이다.
select의 각 선택지는 option 태그를 통해 표시한다.
각각의 option에는 value를 지정하여 추후 처리를 준비한다.
(자바스크립트를 통한 입력 값 처리에 value가 사용될 수 있다)
textarea는 여러 줄의 일반 텍스트를 입력하는 요소를 나타낸다.

유노코딩#13 part.1
form 을 학습하기 전에
form은 사용자가 입력한 데이터(입력값)을 서버로 보내기 위해 사용하는 태그.
근데 서버가 뭐냐?
서버란? 정보를 제공하는 호스트(host)이다!
입력값 예시 : input,textarea,select

서버와 클라이언트
클라이언트(사용자)가 요청을 하면, 서버는 그에 대한 응답으로 정보를 제공한다.
클라이언트 : (네이버 홈페이지 주소를 입력하며) 네이버 홈페이지 보고 싶어요. 요청할게요. 엔터!
서버 : 네 알겠습니다. 홈페이지 html문서를 보내드릴테니 보세요!(응답으로 네이버 웹페이지를 보냄)
클라이언트 : 네 제 웹브라우저에 네이버 홈페이지 오픈됐어요. 감사합니다^^

클라이언트가 어떤 요청을 보내는가에 따라, 응답은 달라질 수 있다.
클라이언트 : 로그인 시켜주세요
서버 : 네! 앗 근데 비밀번호가 틀려요
클라이언트 : 헉 그렇군요ㅠㅠ
=> 로그인 양식은 세 개의 입력 요소로 구성되어 있으며, 세 개의 입력 데이터는 form을 통해 서버로 전송!

유노코딩#14 part.2
form
form은 입력 요소들을 감싸며, 입력 값을 서버 칙으로 제출(submit)할 수 있다.
<form>
 <input type="text" placeholder="아이디">
 <br>
 <input type="text" placeholder="비밀번호">
</form>
=> 우리가 아는 아이디 비밀번호 입력 창이 생성

form의 내용을 제출
form의 내용(입력값)을 제출하기 위해 input 태그의 submit 타입 사용 가능
<form>
 <input type="text" placeholder="아이디">
 <br>
 <input type="text" placeholder="비밀번호">
 <br>
 <input type="submit" value="로그인">
</form>
=>'로그인'버튼을 누르면 입력된 아이디와 비밀번호가 서버로 전송되고(요청),
서버 측에서 데이터를 처리한 결과를 클라이언트에게 보내준다(응답).

form의 속성
action : 입력값을 전송할 서버의 url
method : 클라이언트가 입력한 데이터를 어떤 식으로 전송할지(GET or POST)

<form action="exmaple.php" method="POST">
</form>
=> 위 예제는
- example.php 라는 서버 프로그램으로 입력값을 전송하여 요청할 것이다.
- POST 방식으로 전송할 것이다

GET vs POST
GET : 서버에 요청을 보내어 응답을 받아낸다.
서버로부터 정보를 '가져오겠다'는 성격의 요청이다.

POST : 서버에 요청을 보내어 작업을 수행한다.
서버에 있는 데이터를 추가/수정/삭제 한 후에 응답을 받아낸다.
서버의 정보를 '조작하겠다'는 성격의 요청이다.

내용정리
form은 사용자가 입력 요소에 입력한 데이터를 서버로 전송해준다.
서버란 데이터를 제공하는 호스트이다.
클라이언트란 데이터를 제공받아 이용하는 고객(사용자)이다.
form은 입력요소(input,select,textarea 등)을 감싸고, 데이터를 제출(submit)한다.
form의 action은 서버 측 주소를 지정하는 속성이다.
form의 method는 데이터 전송 방식을 지정하는 속성이다.

유노코딩#15 
meta 태그
meta 태그는 HTML 문서에 대한 메타데이터를 정의한다.
메타데이터란 데이터에 대한 데이터, 즉 '정보'를 의미한다.
meta 태그는 항상 head 태그의 안에 들어가며, 일반적으로 문자 세트,페이지,설명,키워드,문서의
작성자 및 뷰포트 설정을 지정하는데 사용된다.

meta 태그를 사용하는 이유?
웹페이지에 대한 정보를 제공 하므로
검색엔진이 페이지를 검색할 때 참고할 수 있고, 검색 결과에도 반영할 수 있다.

meta 태그가 제공하는 메타데이터의 유형 & 속성은?
- charset : 문자 세트
- http-equiv : 콘텐츠 속성 정보에 대한 http 헤더
- name : 문서 정보
- content : 메타데이터 내용
=> 전부 알기에는 내용이 방대해, 많이  쓰이는 코드 위주로 학습

charset
문자 인코딩에 대한 요약 정보를 기입하는 속성.
문자 인코딩이란한글을 표시하기 위해 문자 세트를 지정하는 작업으로, 영문과 한글을 모두 사용하기 위해
utf-8 방식을 사용하는 것이 좋다.
ex) <meta charset="utf-8">
=>인코딩을 명확하게 기입해두지 않으면 웹브라우저 설정 상황에 따라 자동으로 인코딩을 추정해서 처리한다.
즉, 문자가 꺠질 가능성이 생긴다.

http-equiv
콘텐츠 속성의 정보/값에 대한 HTTP 헤더를 제공한다.
HTTP란 인터넷에서 데이터를 주고 받을 수 있는 포로토콜이다.
데이터를 주고받는 데 필요한 정보를 제공하는 속성
ex)<meta http-equiv="x-ua-compatible" content="IE=edge">
=> IE 브라우저의 최신 버전의 엔진을 사용하라는 뜻
ex)<meta http-equiv="refresh" content="10">
=> 10초마다 페이지 새로고침하라는 뜻

name
name 속성을 이름으로, content 속성을 값으로 하여 문서 정보를 이름+값 쌍의 형태로 제공할 때 사용
ex)<meta name="author" content="강준영"
=> 문서 제작자
ex)<meta name="description" content="페이지에 대한 짧고 명확한 요약">
=> 페이지에 대한 요약. 브라우저 즐겨찾기 페이지의 기본 설명 값
ex)<meta name="keywords" content="예를 들면, 강아지, 고양이, 정보, 반려동물, 등등">
=> 페이지의 콘텐츠와  관련된, 쉼표로 구분한 키워드 목록 해시태그와 같은 느낌

내용정리
meta 태그는 HTML 문서의 메타데이터(정보)를 표시하는 태그다.
검색엔진 최적화에 기여하며, 검색 결과에도 영향을 끼친다.
charset은 문자 인코딩에 대한 요약 정보를 기입하는 속성들이다.
http-equiv는 컨텐츠 속성의 정보/값에 대한 HTTP 헤더를 제공한다.
name 속성은 문서의 다양한 정보를 제공할 수 있는 메타데이터의 이름이다.
content는 메타데이터의 구체적인 내용을 기입하는 속성이다.

추가정보
현대 검색엔진은 메타 키워드 태그의 중요도를 낮추고 실제 콘텐츠 내용에 더 집중하는 경향이 있음


유노코딩#16
뷰포트(viewport)
뷰포트(viewport)란 현재 화면에 보여지고 있는 영역을 의미한다.
기기 별로 뷰포트가 다르기 때문에, 동일한 웹 페이지라도 기기에 따른 배율 조정이 발생해
화면의 크기가 다르게 보이는 현상이 나타난다.
아래 그림은 동일 HTML 문서를 각각 PC와 모바일로 확인한 결과이다

PC 제목을 나타내는 태그
MOBILE 제목을 나타내는 태그 (PC와 모바일이 폰트크기의 차이가 발생)
 
왜 이런 현상이?
태블릿, 스마트폰 등 모바일 기기가 등장하기 전에는 웹 페이지가 컴퓨터 화면만을 위해 설계 되었다.
컴퓨터 화면에서의 웹 페이지는 웹 브라우저라는 소프트웨어를 통해 
페이지 크기를 조절해가며 웹을 조회할 수 있지만,
모바일 기기에서는 고정된 사이즈(스크린 크기)로 조회해야 하므로 
웹의 모든 콘텐츠를 표시하기 위해서는 배율 조정을 해야만 한다.

=>때문에 PC용 웹페이지와 모바일 웹페이지를 따로 만드는 경우도 있다!

name="viewport"
기기 별로 뷰포트가 다르기 때문에 발생하는 배율 문제에 대응하기 위해 
meta태그를 통해 뷰포트 관련 설정을 추가할 수 있다.
ex) <meta name="viewport" content="width=device-width, ininial-scale=1.0">
=> 뷰포트의 너비를 단말기 너비에 맞추고, 초기 배율을 1로 한다!

내용정리
뷰포트는 현재 화면에 보여지고 있는 영역을 의미한다.
웹 문서는 기본적으로 PC화면에 맞춰 설계 되었기 때문에, 다른 기기에서 배율 조정이 일어난다.
배율 조정 현상에 대응하기 위해 개발자는 메타 태그를 사용해 뷰포트 관련 설정을 추가할 수 있다.